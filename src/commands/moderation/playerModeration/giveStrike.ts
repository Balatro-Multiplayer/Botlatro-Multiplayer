import { ChatInputCommandInteraction, MessageFlags } from 'discord.js'
import { calculateExpiryDate } from 'utils/calculateExpiryDate'
import { logCommandUse } from 'utils/logCommandUse'
import { strikeUtils } from 'utils/queryDB'
import { getLoggingThread } from 'utils/getLoggingThread'

export default {
  async execute(interaction: ChatInputCommandInteraction) {
    try {
      await interaction.deferReply({ flags: MessageFlags.Ephemeral })
      const discordChannel = interaction.channel
      const user = interaction.options.getUser('user', true)
      const amount = interaction.options.getInteger('amount', true)
      const reason =
        interaction.options.getString('reason', false) || 'No reason provided'
      const reference =
        interaction.options.getChannel('reference channel', false) ||
        discordChannel
      const referenceChannel = reference?.id || '69' // this needs to be a number in the string so the channel appears as 'unknown' if not found

      const expiryDate = await calculateExpiryDate(user.id)

      await strikeUtils.addStrike({
        id: 0, // This will be auto-generated by the database
        user_id: user.id,
        reason: reason,
        issued_by_id: interaction.user.id,
        issued_at: new Date(),
        expires_at:
          expiryDate || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),
        amount: amount,
        reference: referenceChannel,
      })

      const threadId = await getLoggingThread(2)
      await logCommandUse(interaction, threadId)
    } catch (err: any) {
      console.error(err)
    }
  },
}
