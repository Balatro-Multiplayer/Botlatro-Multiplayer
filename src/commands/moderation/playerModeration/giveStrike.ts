import {
  ChatInputCommandInteraction,
  GuildChannel,
  MessageFlags,
} from 'discord.js'
import { calculateExpiryDate } from 'utils/calculateExpiryDate'
import { strikeUtils } from 'utils/queryDB'
import { client } from '../../../client'
import {
  createEmbedType,
  formatEmbedField,
  logStrike,
} from '../../../utils/logCommandUse'

export default {
  async execute(interaction: ChatInputCommandInteraction) {
    try {
      await interaction.deferReply({ flags: MessageFlags.Ephemeral })
      const discordChannel = interaction.channel
      const user = interaction.options.getUser('user', true)
      let amount = interaction.options.getInteger('strikes', true)
      const reason =
        interaction.options.getString('reason', false) || 'No reason provided'
      const reference =
        interaction.options.getChannel('reference channel', false) ||
        discordChannel
      const referenceChannelId = reference?.id || '69' // this needs to be a number in the string so the channel appears as 'unknown' if not found

      const expiryDate = await calculateExpiryDate(user.id) // crude function to determine expiry length of strike

      const hasStrikes: boolean = await strikeUtils.checkForInstances(user.id)
      if (hasStrikes && amount === 0) amount = 1

      const username = (await client.users.fetch(user.id)).username
      const blame = (await client.users.fetch(interaction.user.id)).username
      const referenceChannel: GuildChannel = (await client.channels.fetch(
        referenceChannelId,
      )) as GuildChannel
      const reasonFormat = formatEmbedField(reason)

      const strikeId = await strikeUtils.addStrike({
        id: 0, // This will be auto-generated by the database
        user_id: user.id,
        reason: reason,
        issued_by_id: interaction.user.id,
        issued_at: new Date(),
        expires_at:
          expiryDate || new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // default to 7 days
        amount: amount,
        reference: referenceChannel.name ?? 'unknown channel',
      })

      // log usage
      const embed = createEmbedType(
        `#${strikeId} - STRIKE GIVEN`,
        'desc.',
        null, // default
        [
          { name: `Amount`, value: `${amount}`, inline: true },
          { name: `Reason`, value: `${reasonFormat}`, inline: true },
          {
            name: `Ref`,
            value: referenceChannel.name ?? 'unknown channel',
            inline: true,
          },
        ],
        null,
        `${blame}`,
      )
      await logStrike('add_strike', embed)

      await interaction.editReply(
        `User ${username} given ${amount} strikes ${reason == 'No reason provided' ? `for ${reason}` : ``}`,
      )
    } catch (err: any) {
      console.error(err)
    }
  },
}
